package {{ .Name }}

//
// Data model for {{ .Name }}
//

{{ if eq .Parallel true }}
import "sync"
{{ end }}

// Config contains configuration for the {{ .Name }} experiment.
type Config struct {
	// TODO: add fields here if you need any config
}

{{ if eq .Parallel true }}

// TestKeys is the interface with which you access the real test keys.
type TestKeys interface {
	// SetFundamentalFailure sets testKeys.fundamentalFailure.
	SetFundamentalFailure(err error)

	// FundamentalFailure gets testKeys.fundamentalFailure.
	FundamentalFailure() error

	// TODO: define thread-safe accessors for the real test keys.
}

// testKeys contains the experiment test keys.
type testKeys struct {
	// mu provides mutual exclusion for accessing the test keys
	mu sync.Mutex

	// fundamentalFailure indicates that some fundamental error occurred
	// in a background task. As such, you don't want to submit this
	// measurement to the OONI collector.
	fundamentalFailure error

	// TODO: add here fields produced by this experiment. They should
	// be public such that we can JSON serialize them.
	//
	// For example:
	//
	// // Blocked indicates that the resource is censored.
	// Blocked bool `json:"blocked"
}

var _ TestKeys = &testKeys{}

// SetFundamentalFailure implements TestKeys.
func (tk *testKeys) SetFundamentalFailure(err error) {
	tk.mu.Lock()
	tk.fundamentalFailure = err
	tk.mu.Unlock()
}

// FundamentalFailure implements TestKeys.
func (tk *testKeys) FundamentalFailure() error {
	tk.mu.Lock()
	err := tk.fundamentalFailure
	tk.mu.Unlock()
	return err
}

// TODO: implement thread-safe setters for the real test keys. This allows
// tasks to write directly into the TestKeys.
//
// For example:
//
// func (tk *testKeys) SetBlocked(blocked bool) {
//   tk.mu.Lock()
//   tk.Blocked = blocked
//   tk.mu.Unlock()
// }

// NewTestKeys creates a new instance of TestKeys.
func NewTestKeys() TestKeys {
	return &testKeys{}
}

{{ else }}

// TestKeys contains the results produced by the experiment.
type TestKeys struct{
	// TODO: add here fields produced by this experiment
}

// NewTestKeys creates a new instance of TestKeys.
func NewTestKeys() *TestKeys {
	return &TestKeys{}
}

{{ end }}

// Summary contains the summary results.
//
// Note that this structure is part of the ABI contract with ooniprobe
// therefore we should be careful when changing it.
type SummaryKeys struct {
	isAnomaly bool
	// TODO: add here additional summary fields.
}
